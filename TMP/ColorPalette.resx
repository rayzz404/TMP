<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABN4n8Bl92O2k0lp+4AAAAASUVORK5CYII=
</value>
  </data>
</root>